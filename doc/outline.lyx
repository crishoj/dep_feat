#LyX 1.6.3 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass report
\begin_preamble
\usepackage{url}
\end_preamble
\use_default_options true
\language english
\inputencoding utf8
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\cite_engine natbib_authoryear
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Title
Feature Engineering for Data-Driven Dependency Parsing
\end_layout

\begin_layout Author
Christian Rishøj Jensen
\end_layout

\begin_layout Standard
Forsiden Følgende oplysninger skal fremgå af specialets forside eller siden
 umiddelbart efter:
\end_layout

\begin_layout Standard
Titel og evt.
 undertitel Københavns Universitet Institut/Fag Dit navn Din vejleders navn
 År og måned for aflevering.
\end_layout

\begin_layout Standard
Alle specialer skal ved afleveringen have anført, hvor mange tegn inklusive
 mellemrum det færdige speciale udgør.
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Chapter
Introduction
\end_layout

\begin_layout Standard
Language competence might well be among the most impressive of cognitive
 abilities, both with respect to the conceptual complexity conveyable in
 the linguistic vehicle, and the effectiveness with which we are able to
 grasp utterances and make sense of them.
 Thanks to the generative quality of language, by which phrases and sentences
 may be combined and embedded within each other recursively, the extension
 of language is potentially limitless.
 On the comprehension side, structureally ambigous and semantically underspecifi
ed utterances are swiftly decoded and assigned with a likely interpretation.
 A task that from a formal point of view has immense complexity is continually
 carried out by the language user, seemingly without any effort.
 During this process the comprehender presumably registers a variety of
 phenomena in the uttered speech or written text in order to contruct the
 proper interpretation.
 As examplars of this, apart from the sequence and identity of the uttered
 words themselves, the comprehender is likely to take of the 
\emph on
kind
\emph default
 of word being used, i.e.
 the 
\emph on
part of speech
\emph default
 to which the word belongs, 
\emph on
morphological
\emph default
 structure of the words themselves, as well as grammatical pauses in between
 words, and employ this information in interpretation.
 I might not know the word 
\emph on
flocculation
\emph default
, but from its suffix of 
\emph on
-tion
\emph default
 I can tell that it is a noun, probably for an action or a condition, which
 can help me get an idea of how it fits in a structural analysis of the
 sentence.
 Clarifying remarks in the middle of an utterence might be indicated by
 a brief pause.
 And when my mother reports on a heated discussion with a salesperson, a
 clear change in tone of voice provides me with an indication of when she
 is 
\emph on
directly reporting
\emph default
 the other person's speech.
\end_layout

\begin_layout Standard
EXPAND: quotations in Danish?
\end_layout

\begin_layout Standard
In the field of human language technology, a computer system that performs
 a syntactic, semantic, or other level of structural analysis of a sentence
 is referred to as a 
\emph on
parser
\emph default
.
 Modern day parsing systems also benefit from information other than the
 surface form of processed words.
 A common step prior to parsing is to identify the part of speech for each
 word.
 Tense, case, number, gender and other inflectional information is often
 also extracted and made explicit, in order to make the information carried
 herein available for the parser to take advantage of it when making decisions
 in the parsing process.
 
\end_layout

\begin_layout Standard
One approach to automatic syntactic analysis, referred to as 
\emph on
dependency parsing
\emph default
, has gained increasing interest in the last decade.
 While neither dependency parsing nor the underlying formalism of 
\emph on
dependency grammer
\emph default
 are new inventions, the intense interest likely stems from the success
 researches have had in constructing dependency parsers that do not rely
 on hand-crafted grammatical rules and lexica, but rather 
\emph on
learn
\emph default
 from vast amounts of example analyses.
 This training material, referred to as a 
\emph on
treebank,
\emph default
 consists of collections of sentences and corresponding structural analyses.
 Such 
\emph on
data-driven dependency parsers
\emph default
 have quickly risen to become competitive with traditional grammar-based
 systems in parsing accuracy, without the immensely time-consuming task
 of manually crafting a grammar.
 There is optimism in the research community that a hybrid of both worlds,
 in which a combination of different parsers allows one to benefit from
 the analysis of the other, will lead to even better results.
\end_layout

\begin_layout Standard
While data-driven parsers are able to learn their trade from examples, they
 are not cognitive models of human language ability, that is to say, approximati
ons of human cognitive processes for the purpose of comprehension and prediction.
 Parsing systems are constructed with other goals in mind, predominantly
 automated language processing for such tasks as information retrieval,
 document classification and summarization, machine translation and automated
 dialog systems.
\end_layout

\begin_layout Standard
However, as parsing systems already benefit from cues such as inflectional
 features and part of speech, it does not seem far-fetched to assume that
 parsing could benefit from other cues that are of use in human apprehension.
\end_layout

\begin_layout Standard
The aim of this thesis shall be to investigate the following question: Is
 it possible to augment treebanks with additional or modified features,
 such that existing data-driven parsing systems generate better dependency
 parsers?
\end_layout

\begin_layout Standard
In parsing system research, there seems to be an emphasis on constructing
 parsers for written text.
 While noone would argue that a spoken utterence from a language user turns
 into another language if she chooses to write it on a piece of paper, there
 are however substantial differences.
 Interpretational cues found in spoken language do not always have direct
 equivalents in writing.
 Variations in tone of voice for example is not obvious from a written accout.
 Some cues are present in writing, though, and while the cues in speech
 are often subtle, the cues that are present in writing stand out more clearly.
 In particular, directly reported speech is conventionally marked with quotation
 marks, and inserted supplementary remarks are typically surrounded by parenthes
es, hyphens or -- more subtly -- commas.
 Thus, there are plenty of potential features in written texts to choose
 from as well.
 
\end_layout

\begin_layout Standard
So, the focus area of this project is squarely investigating feature engineering
 in data-driven parsing systems.
 But conversely, such experiments with feature engineering in data-driven
 parsing systems may also offer an interesting opportunity to investigate
 which features of spoken or written utterances might be of value for comprehens
ion in genereal -- including human.
 Given a sufficiently capable and trainable parsing model, if we are interested
 in whether for example capitalization of written text could play any role
 in comprehension, we could train two models with the same training material,
 but make word capitalization explicit to only one of them.
 Once trained, let both models attempt an interpretation of the same text,
 and see if the extra feature provided to the latter model had any significant
 effect on the analytical performance.
 
\end_layout

\begin_layout Standard
Of couse, an observed positive effect of a feature in a parsing system would
 not entail the existence of a cognitive counterpart in use by language
 users.
 But it would provide evidence of the informational value of the cue with
 respect to structural comprehension.
\end_layout

\begin_layout Chapter
An Overview of Data-Driven Dependency Parsing
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename /Users/christian/Projects/dep_feat/doc/figures/example_dependency_tree.eps
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Dependency structure for a Danish sentence from the Danish Dependency Treebank
 
\begin_inset CommandInset citation
LatexCommand citep
key "kromann_danish_2003"

\end_inset

.
 
\begin_inset CommandInset label
LatexCommand label
name "Flo:ex-dep"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /Users/christian/Projects/dep_feat/doc/figures/example_constituent_structure.eps
	width 80text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Possible constituent structure for the sentence in figure
\begin_inset CommandInset ref
LatexCommand vref
reference "Flo:ex-dep"

\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Dependency Grammar
\end_layout

\begin_layout Standard
By some estimates the tradition of dependency grammar can be traced as far
 back as some of the earliest works of descriptive and generative linguistics,
 namely the Sanskrit grammar of 
\begin_inset Formula $Pāṇini$
\end_inset

 a few centuries before the Common Era.
 The tradition includes a large and diverse family of grammatical theories
 and formalisms, all sharing the basic assumption that syntactic structures
 essentially consists of 
\emph on
words
\emph default
 that are related to each other by binary, assymmetrical relations called
 
\emph on
dependencies
\emph default
 
\begin_inset CommandInset citation
LatexCommand citep
key "kbler_dependency_2009,nivre_dependency_2005"

\end_inset

, with one word in a dependency relation being the 
\emph on
head
\emph default
, and the other being the 
\emph on
dependent
\emph default
.
 
\end_layout

\begin_layout Standard
With respect to this basic property, dependency structures can be contrasted
 to 
\emph on
constituency structures
\emph default
, another dominant syntactic representation, in which words are not directly
 related to each, but only indirectly through 
\emph on
non-terminal
\emph default
 nodes, each of which may in turn be related to another non-terminal node.
 A non-terminal node in a constituency structure is not manifest in the
 surface form of the sentence, but forms a group of words, or a 
\emph on
phrase
\emph default
, which stand together as a conceptual unit.
\end_layout

\begin_layout Standard
The same conceptual units can be recognized in a dependency structure by
 their heads: All words that transitively depend on a head are part of the
 conceptual unit 
\emph on
governed
\emph default
 by the head.
 As a bit of additional nomenclature, dependents are said to 
\emph on
modify
\emph default
 their heads.
\end_layout

\begin_layout Standard
Various criteria for identifying dependency relations have been proposed.
 Some common criteria are 
\begin_inset CommandInset citation
LatexCommand citep
key "nivre_dependency_2005"

\end_inset

:
\begin_inset CommandInset label
LatexCommand label
name "Various-criteria"

\end_inset


\end_layout

\begin_layout Enumerate
A head determines the syntactic category of the dependent and can often
 replace the dependent.
\end_layout

\begin_layout Enumerate
A head determines the semantic category of the dependent.
\end_layout

\begin_layout Enumerate
Dependents provides semantic speciﬁcation.
 
\end_layout

\begin_layout Enumerate
A head is obligatory, while dependents may be optional.
 
\end_layout

\begin_layout Enumerate
The head selects its dependent and determines whether the dependent is obligator
y or optional.
 
\end_layout

\begin_layout Enumerate
The form of the dependent is determined by the head (agreement or government).
\end_layout

\begin_layout Enumerate
The linear position of a dependent is speciﬁed with reference to the head.
 
\end_layout

\begin_layout Standard
These criteria refer to a mix of phenomena on different levels of linguictics
 analysis, from morphosyntax to semantics.
 There seems to be no universally authoritative set of criteria for all
 dependency relations 
\begin_inset CommandInset citation
LatexCommand citet
key "kbler_dependency_2009"

\end_inset

.
 Rather, several levels of dependency analysis can be made on a sentence,
 and the criteria for identifying dependencies are chosen accordingly.
 Levels of dependency analysis include: 
\end_layout

\begin_layout Description
Morphosyntactic in which inflectional affixes are represented as separate
 tokens (useful for highly inflected languages).
\end_layout

\begin_layout Description
Syntactic where dependencies identify syntactic functions, including 
\noun on
predicate
\noun default
, 
\noun on
subject
\noun default
 and 
\noun on
object
\noun default
.
\end_layout

\begin_layout Description
Semantic where semantic roles (including 
\noun on
agent
\noun default
, 
\noun on
patient
\noun default
 and 
\noun on
goal
\noun default
) are designated by dependencies.
\end_layout

\begin_layout Standard
It is worth noting that dependency representation is not inherently limited
 to these levels of analysis.
 In principle, there is nothing that hinders the use of dependency analysis
 for identifying other relations between tokens for which a consistent set
 of criteria can be formulated.
 Additionally, theoretical frameworks for 
\emph on
multi-stratal
\emph default
 representations exist, in which several levels of analysis is represented
 in the same structure.
 For this project, the focus is exclusively on mono-stratal syntactic analysis.
\end_layout

\begin_layout Standard
In comparison to constituency structures, dependency structures are a more
 constrained representation, as the number of nodes to connect in the structure
 is fixed by the number of words in the sentence, whereas the constituency
 structure contains additional non-terminal nodes.
 To many researchers in computational linguistics, working with dependency
 representations has seemed more tractable and more apt for further semantic
 processing, thanks to the relatively transparent encoding of the predicate-argu
ment structure of a sentence through word dependencies 
\begin_inset CommandInset citation
LatexCommand citet
key "nivre_dependency_2005"

\end_inset

.
\end_layout

\begin_layout Subsection
Formal definitions
\end_layout

\begin_layout Standard
Following 
\begin_inset CommandInset citation
LatexCommand citet
key "kbler_dependency_2009"

\end_inset

, let a sentence 
\begin_inset Formula $S$
\end_inset

 be defined in formal terms as a sequence of tokens:
\end_layout

\begin_layout Standard
\begin_inset Formula \[
S=w_{0}w_{1}...w_{n}\]

\end_inset


\end_layout

\begin_layout Standard
Dependency structure is defined on these tokens, so tokenization of the
 sentence must have taken place prior to the dependency analysis.
 Further, let 
\begin_inset Formula $R$
\end_inset

 denote a finite set of dependency 
\emph on
relation types
\emph default
 -- or 
\emph on
arc labels
\emph default
 -- that can hold between tokens:
\end_layout

\begin_layout Standard
\begin_inset Formula \[
R=\left\{ r_{1},r_{2},...,r_{m}\right\} \]

\end_inset


\end_layout

\begin_layout Standard
A 
\emph on
dependency graph
\emph default
 
\begin_inset Formula $G$
\end_inset

 is then defined as a 
\emph on
labeled, directed 
\emph default
graph of nodes 
\begin_inset Formula $V$
\end_inset

 and arcs 
\begin_inset Formula $A$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula \[
G=(V,A)\]

\end_inset


\end_layout

\begin_layout Standard
The nodes 
\begin_inset Formula $V$
\end_inset

 in the graph are comprised of sentence tokens, and the labeled arcs 
\begin_inset Formula $A$
\end_inset

 connect these:
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{eqnarray*}
V & \subseteq & \left\{ w_{0},w_{1},...,w_{n}\right\} \\
A & \subseteq & V\times R\times V\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
In these terms, a dependency graph 
\begin_inset Formula $G$
\end_inset

 represents a particular dependency analysis of the sentence 
\begin_inset Formula $S$
\end_inset

, with the arcs 
\begin_inset Formula $A$
\end_inset

 being the dependencies posited by the analysis.
 For mono-stratal analysis, we only allow a single relation to hold from
 one token to another:
\begin_inset Formula \[
(w_{i},r,w_{J})\in A\Longrightarrow(w_{i},r',w_{J})\in A\text{ for all }r'\neq r\]

\end_inset


\end_layout

\begin_layout Standard
Note that the single arc restriction in this formulation is only refers
 to one direction, namely from 
\begin_inset Formula $w_{i}$
\end_inset

 to 
\begin_inset Formula $w_{j}$
\end_inset

 (denoted by 
\begin_inset Formula $w_{i}\to w_{j}$
\end_inset

).
 It does not prohibit another relation from going the other way, 
\begin_inset Formula $w_{j}\to w_{i}$
\end_inset

.
 Additionally, there is nothing that prohibits 
\begin_inset Formula $cycles$
\end_inset

 from occurring in the the graph.
 Thus, let a 
\emph on
well-formed dependency graph
\emph default
 be any dependency graph 
\begin_inset Formula $G$
\end_inset

 of nodes 
\begin_inset Formula $V$
\end_inset

 and arcs 
\begin_inset Formula $A$
\end_inset

 that is a 
\emph on
directed tree
\emph default
 rooted in node 
\begin_inset Formula $w_{0}$
\end_inset

 and has node set 
\begin_inset Formula $V_{S}$
\end_inset

 which spans all nodes in the graph: 
\begin_inset Formula $V=V_{S}$
\end_inset

.
 It follows from the 
\emph on
spanning
\emph default
 property that the well-formed dependency graph is also 
\emph on
connected
\emph default
.
 Well-formed dependency graphs are also called 
\emph on
dependency trees
\emph default
.
 The constraints of well-formedness are assumed by most mono-stratal dependency
 theories, and in most cases also holds within each layer of a multi-stratal
 theory
\begin_inset CommandInset citation
LatexCommand citep
key "kbler_dependency_2009"

\end_inset

.
\end_layout

\begin_layout Standard
A property of dependency trees that follow from the tree constraint itself
 is the 
\emph on
single-head property
\emph default
, which states that if a dependency relation 
\begin_inset Formula $w_{i}\to w_{j}$
\end_inset

 holds between two tokens 
\begin_inset Formula $w_{i},w_{j}\in V$
\end_inset

, then there can be no other 
\begin_inset Formula $w_{i'}\in V$
\end_inset

 such that 
\begin_inset Formula $i'\neq i$
\end_inset

 and 
\begin_inset Formula $w_{i'}\to w_{j}$
\end_inset

.
 There is some controversy to this property, as there are cases where it
 seems natural to have multiple heads on a dependent.
 In particular, in sentences with coordinated verbs -- e.g.
 
\emph on
guests enter and exit through the lobby
\emph default
 -- it would appear reasonable to let the subject depend on both verbs.
 Most formalisms deal with dependents of coordinated phrases by simply letting
 the dependent modify the head of the coordinated phrase -- whether it is
 chosen to be the coordination itself or one of the coordinated tokens.
\end_layout

\begin_layout Subsection
Projectivity
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement b
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename /Users/christian/Projects/dep_feat/doc/figures/examples/non_projective.eps
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Non-projective dependency tree.
 The dependency 
\emph on
den 
\begin_inset Formula $\to$
\end_inset

 ordinerede
\emph default
 is crossing the dependency 
\emph on
viser
\emph default
 
\begin_inset Formula $\to$
\end_inset

 
\emph on
frem
\emph default
.
\end_layout

\end_inset


\end_layout

\end_inset

A further restriction on dependency trees is often assumed for reasons of
 computational tractability, namely 
\emph on
projectiveness
\emph default
.
 A dependency tree if projective if and only if it satisfies the 
\emph on
planar property
\emph default
, namely if it is possible to graphically configure all the dependency arcs
 in a place above the sentence -- without any crossing arcs.
 For such a depiction to be possible, the head 
\begin_inset Formula $w_{i}$
\end_inset

 of all dependencies 
\begin_inset Formula $w_{i}\to w_{j}$
\end_inset

 in the tree must dominate every node 
\begin_inset Formula $w_{m}$
\end_inset

 which occurs between the endpoints 
\begin_inset Formula $w_{i},w_{j}$
\end_inset

 in the linear order of the sentence.
 
\emph on
Dominate
\emph default
 here is the transitive and reflexive closure of the dependency relation,
 so that a node is dominated by its head, the head of its head, and so forth
 up until the root node of the tree.
 
\end_layout

\begin_layout Standard
In formal terms, this amounts the following definitions 
\begin_inset CommandInset citation
LatexCommand citep
key "kbler_dependency_2009"

\end_inset

:
\end_layout

\begin_layout Enumerate
Let 
\begin_inset Formula $w_{i}\twoheadrightarrow w_{j}$
\end_inset

 denote the reflexive and transitive closure of the dependency relation
 in a tree 
\begin_inset Formula $G=(V,A)$
\end_inset

: 
\begin_inset Formula $w_{i}\twoheadrightarrow w_{j}$
\end_inset

 if and only if 
\begin_inset Formula $i=j$
\end_inset

 (reflexive) or both 
\begin_inset Formula $w_{i}\twoheadrightarrow w_{i'}$
\end_inset

 and 
\begin_inset Formula $w_{i}\to w_{j}$
\end_inset

 for some 
\begin_inset Formula $w_{i'}\in V$
\end_inset

.
\end_layout

\begin_layout Enumerate
An arc 
\begin_inset Formula $(w_{i},r,w_{j})\in A$
\end_inset

 in a dependency tree 
\begin_inset Formula $G=(V,A)$
\end_inset

 is projective if and only if 
\begin_inset Formula $w_{i}\twoheadrightarrow w_{k}$
\end_inset

 for all 
\begin_inset Formula $i<k<j$
\end_inset

 when 
\begin_inset Formula $i<j$
\end_inset

, or 
\begin_inset Formula $j<k<i$
\end_inset

 when 
\begin_inset Formula $j<i$
\end_inset

.
\end_layout

\begin_layout Enumerate
A dependency tree 
\begin_inset Formula $G=(V,A)$
\end_inset

 is a projective dependency tree if all 
\begin_inset Formula $(w_{i},r,w_{j})\in A$
\end_inset

 are projective.
 
\end_layout

\begin_layout Standard
For notational convenience, let 
\begin_inset Formula $\mathcal{G}_{S}^{P}$
\end_inset

 denote the set of prejective dependency trees for a sentence 
\begin_inset Formula $S$
\end_inset

.
\end_layout

\begin_layout Subsubsection
Projectivization
\end_layout

\begin_layout Standard
Non-projective dependencies can be caused by wh-movement, which occurs naturally
 in many languages with SVO as dominant order.
 As such, projectivity is not a linguistically plausible constraint.
 In cases where it nonetheless is assumed, non-projective cases are normally
 handled by having procedures for converting non-projective trees to projective
 trees (
\emph on
projectivization
\emph default
) and back (
\emph on
de-projectivization
\emph default
) as steps of pre- and post-processing (see figure 
\begin_inset CommandInset ref
LatexCommand vref
reference "fig:Projectivization"

\end_inset

).
 
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename figures/examples/projectivization.pdf

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Projectivization of a non-projective dependency tree 
\begin_inset CommandInset citation
LatexCommand citep
key "kbler_dependency_2009"

\end_inset

.
\begin_inset CommandInset label
LatexCommand label
name "fig:Projectivization"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
Dependency Parsing
\begin_inset CommandInset label
LatexCommand label
name "sec:Dependency-Parsing"

\end_inset


\end_layout

\begin_layout Standard
In this section I aim to outline of the problem dependency parsing, with
 the emphasis on data-driven parsing and the learning process entailed.
\end_layout

\begin_layout Standard
Simply put, dependency parsing is the task of constructing a dependency
 tree for a sentence.
 Approaches to the parsing problem can be characterized by being 
\emph on
grammar-based
\emph default
 or 
\emph on
data-driven
\emph default
.
 An approach is grammar-based if a formally specified and often hand-crafted
 grammar is employed in parsing, such that it makes sense to ask whether
 a given sentence is producable by the grammar or not.
 In most data-driven approaches, a method from 
\emph on
machine learning
\emph default
 is used to train a parsing model on a collection of example analyzed sentences,
 resulting in some 
\emph on
learned parameters
\emph default
, which in turn is used by the parsing model to parse new sentences.
 It is worth noting that these categories are not mutually exclusive, as
 some approaches induce grammars from collections of analyzed sentences,
 and this are indeed both data-driven and grammar-based.
\end_layout

\begin_layout Standard
In formal terms, a dependency parsing model 
\begin_inset Formula $M$
\end_inset

 consists of:
\end_layout

\begin_layout Enumerate
a set of 
\emph on
constraints
\emph default
 
\begin_inset Formula $\Gamma$
\end_inset

 which define the space of possible dependency structures producable for
 a sentence, 
\end_layout

\begin_layout Enumerate
a fixed 
\emph on
algorithm
\emph default
 
\begin_inset Formula $h$
\end_inset

, and
\end_layout

\begin_layout Enumerate
a -- possibly empty -- set of 
\emph on
parameters
\emph default
 
\begin_inset Formula $\lambda$
\end_inset

 that guide the parsing algorithm.
\end_layout

\begin_layout Standard
For a grammar-based system, the constraints would include the rules of grammar
 in use.
 
\end_layout

\begin_layout Standard
The parsing problem in formal terms is then to find the most likely dependency
 tree 
\begin_inset Formula $G=h(S,\Gamma,\lambda)$
\end_inset

 for a sentence 
\begin_inset Formula $S$
\end_inset

.
 Which tree is most likely depends, apart from the general criteria for
 dependencies outlined 
\begin_inset CommandInset ref
LatexCommand vpageref
reference "Various-criteria"

\end_inset

, on the specific dependency formalism in use.
 In between formalisms there are various annotational conventions, not only
 with respect to the set of dependency types used, but also differences
 in treatmeant of such phenomena as coordination 
\begin_inset CommandInset citation
LatexCommand citep
key "nivre_dependency_2005"

\end_inset

, head-status of functional categories 
\begin_inset CommandInset citation
LatexCommand citep
key "vrelid_cross-lingual_2009"

\end_inset

 and locutions 
\begin_inset CommandInset citation
LatexCommand citep
key "bosco_linguistic_2008"

\end_inset

, which are particularly open to interpretation from a dependency viewpoint.
 
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename /Users/christian/Projects/dep_feat/doc/figures/examples/coordination1.pdf
	width 45text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Coordinating conjunction as head
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename /Users/christian/Projects/dep_feat/doc/figures/examples/coordination2.pdf
	width 45text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Coordinated conjunct as head
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Different conventions for annotating coordinated noun phrases 
\begin_inset CommandInset citation
LatexCommand citep
key "nivre_dependency_2005"

\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
A data-driven parser must learn these annotational conventions when presented
 with the training material.
 In formal terms, the training material 
\begin_inset Formula $\mathcal{D}$
\end_inset

 is comprised of pairs of sentences and dependency trees 
\begin_inset CommandInset citation
LatexCommand citep
key "kbler_dependency_2009"

\end_inset

:
\begin_inset Formula \[
\mathcal{D}=\left\{ (S_{d},G_{d})\right\} _{d=0}^{|\mathcal{D}|}\]

\end_inset


\end_layout

\begin_layout Standard
The core of the learning phase typically involves adjusting the parameters
 
\begin_inset Formula $\lambda$
\end_inset

 in order to optimize some function over the training set 
\begin_inset Formula $\mathcal{D}$
\end_inset

.
 The nature of the parameters depend on the specific parsing model in use.
 In one model, a parameter might represent the likelihood of a dependency
 arc occurring in a sentence.
 
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename figures/data-driven/Training_Phase.eps
	lyxscale 50
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Learning phase
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename figures/data-driven/Parsing_Phase.eps
	lyxscale 50
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Parsing phase
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Phases of data-driven parsing.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
TODO: root token
\end_layout

\begin_layout Subsection
Feature function
\end_layout

\begin_layout Standard
Also involved in the learning phase is a 
\emph on
feature function
\emph default
 
\begin_inset Formula $f(x):\mathcal{X}\to\mathcal{Y}$
\end_inset

, that maps some input 
\begin_inset Formula $x$
\end_inset

 into the feature space 
\begin_inset Formula $\mathcal{Y}$
\end_inset

.
 The specific input for the feature function depends on the parsing model,
 but almost always includes a token from the sentence, and in some cases
 the state of the parser.
 In broad terms, the feature function takes information about a sentence
 that is deemed useful for the purpose learning and parsing, and makes it
 explicit to the machine learning component, typically in the form of a
 high-dimensional real-valued feature vector.
 
\end_layout

\begin_layout Standard
Example features for a given token include:
\end_layout

\begin_layout Itemize
Word form.
\end_layout

\begin_layout Itemize
Lemma.
\end_layout

\begin_layout Itemize
Part of speech.
\end_layout

\begin_layout Itemize
Morphological and inflectional properties.
\end_layout

\begin_layout Itemize
Similar information about adjacent tokens.
\end_layout

\begin_layout Standard
Features like these are mostly categorical, so it may not be obvious how
 to represent them in a real-valued vector space.
 The method of choice is to represent a 
\begin_inset Formula $m$
\end_inset

-valued categorical feature as an 
\begin_inset Formula $m$
\end_inset

-dimensional vector of zeros and a single one, indicating the categorical
 feature value.
\end_layout

\begin_layout Subsection
Transition-based models
\end_layout

\begin_layout Standard
Transition-based models process sentence tokens sequentially in a stepwise
 manner, and construct a dependency tree for the sentence as a side-effect
 of the 
\emph on
transitions
\emph default
 made in an 
\emph on
abstract machine
\emph default
 as the parsing proceeds.
 At each step, the machine is in a certain 
\emph on
state
\emph default
 determined by the position in the sentencen and the 
\emph on
parsing history
\emph default
, ie.
 the transitions performed prior to the current state.
 
\end_layout

\begin_layout Subsubsection
Shift-reduce models
\end_layout

\begin_layout Standard
Several transition-based models have been proposed 
\begin_inset CommandInset citation
LatexCommand citep
key "nivre_conll_2007"

\end_inset

, many of which are inspired by traditional shift-reduce parsers
\begin_inset CommandInset citation
LatexCommand citep
key "nivre_efficient_2003,hall_single_2007"

\end_inset

.
 In these, the state -- or 
\emph on
configuration -- 
\emph default
of the transition-based parser for a sentence 
\begin_inset Formula $S$
\end_inset

 is a triple 
\begin_inset Formula $c=(\sigma,\beta,A)$
\end_inset

 of:
\end_layout

\begin_layout Enumerate
A stack 
\begin_inset Formula $\alpha$
\end_inset

 of tokens 
\begin_inset Formula $w_{i}\in V_{S}$
\end_inset

,
\end_layout

\begin_layout Enumerate
a buffer 
\begin_inset Formula $\beta$
\end_inset

 of tokens 
\begin_inset Formula $w_{i}\in V_{S}$
\end_inset

 and
\end_layout

\begin_layout Enumerate
a set 
\begin_inset Formula $A$
\end_inset

 of dependency arcs 
\begin_inset Formula $(w_{i},r,w_{j})\in V_{S}\times R\times V_{S}$
\end_inset

.
\end_layout

\begin_layout Standard
As the transition-based parser proceeds, the state contains a partial analysis
 of the sentence, where 
\begin_inset Formula $A$
\end_inset

 contains arcs of the partially completed dependency tree, the buffer 
\begin_inset Formula $\beta$
\end_inset

 contains tokens remaining to be processed and the stack 
\begin_inset Formula $\sigma$
\end_inset

 contains partially processed tokens.
\end_layout

\begin_layout Standard
The transitions of one shift-reduce parser 
\begin_inset CommandInset citation
LatexCommand citep
key "nivre_efficient_2003"

\end_inset

 are:
\end_layout

\begin_layout Description

\noun on
Shift
\noun default
 removes the ﬁrst word 
\begin_inset Formula $w_{i}$
\end_inset

 in the buffer and pushes it on top of the stack.
\end_layout

\begin_layout Description

\noun on
Left-Arc(
\begin_inset Formula $r$
\end_inset

)
\noun default
 for any dependency label 
\begin_inset Formula $r$
\end_inset

.
 This transition has the effect of adding a dependency arc with label 
\begin_inset Formula $r$
\end_inset

 from the first token on the buffer 
\begin_inset Formula $w_{i}$
\end_inset

 to the token on the top of the stack 
\begin_inset Formula $w_{j}$
\end_inset

, and removing the top token from the stack (
\emph on
popping 
\emph default
the stack).
 
\end_layout

\begin_layout Description

\noun on
Right-Arc(
\begin_inset Formula $r$
\end_inset

)
\noun default
 again for any dependency label 
\begin_inset Formula $r$
\end_inset

.
 This transition works as 
\noun on
Left-Arc(
\begin_inset Formula $r$
\end_inset

)
\noun default
, except that in this case the introduced dependency arc goes the other
 way, from the token on the top of the stack to the first token on the buffer.
 In addition, the first token on the buffer is replaced by the token from
 the top of the stack.
\end_layout

\begin_layout Standard
The transitions have certain inevitable preconditions, e.g.
 
\noun on
Shift
\noun default
 is only permissible when the buffer is non-empty, and both 
\noun on
Arc
\noun default
 transitions only only makes sense when both the stack and the buffer are
 non-empty.
\end_layout

\begin_layout Standard
With an 
\emph on
initial state
\emph default
 
\begin_inset Formula $c_{0}=([w_{0}],[w_{1},w_{2},...,w_{n}],[])$
\end_inset

 with the first (artificial root) token on the stack, the rest of the sentence
 in the buffer and no arcs, the shift-reduce parser proceeds through a sequence
 of states 
\begin_inset Formula $C_{0,m}=(c_{o},c_{1},...,c_{m})$
\end_inset

 until it reaches the 
\emph on
terminal state
\emph default
 where the buffer is empty.
 At this point the dependency tree produced by the shift-reduce parser is
 contained in 
\begin_inset Formula $A$
\end_inset

.
\end_layout

\begin_layout Standard
The resulting dependency arcs in 
\begin_inset Formula $A$
\end_inset

 will be 
\emph on
acyclic
\emph default
, 
\emph on
spanning
\emph default
 and 
\emph on
single-headed
\emph default
, but for some transition sequences, 
\begin_inset Formula $A$
\end_inset

 may fail to satisfy the 
\emph on
connectedness
\emph default
 criteria of well-formed dependency graphs.
 In Nivre's 
\begin_inset CommandInset citation
LatexCommand citeyearpar
key "nivre_efficient_2003"

\end_inset

 parser, possibly disconnected trees in 
\begin_inset Formula $A$
\end_inset

 are simply connected to the root node at the completion of the transition
 sequence.
\end_layout

\begin_layout Standard
As with other transition-based approaches relying on a 
\emph on
stack
\emph default
 for partially processed tokens, the model outlined here is restricted to
 produce projective dependency trees 
\begin_inset CommandInset citation
LatexCommand citep
key "nivre_algorithms_2008"

\end_inset

.
 The constraints 
\begin_inset Formula $\Gamma$
\end_inset

 inherent in this parsing model is therefore the set of constraints characterizi
ng projective dependency trees 
\begin_inset Formula $\mathcal{G}_{S}^{P}$
\end_inset

.
 Non-projective parses can be achieved either by modication of the parsing
 model, or by steps of pre- and post-processing.
\end_layout

\begin_layout Standard
TODO: runtime
\end_layout

\begin_layout Standard
Other transition-based approaches include list-based models 
\begin_inset CommandInset citation
LatexCommand citep
key "covington_fundamental_2001"

\end_inset

 and generalized LR-parsers 
\begin_inset CommandInset citation
LatexCommand citep
key "watson_adaptingrasp_2007,sagae_dependency_2007"

\end_inset

.
 List-based models, in which a lists are used instead of stacks, allow operation
s on any of the partially processed tokens -- rather than just the most
 recent, as is the case with a stack -- enabling them to produce non-projective
 graphs.
\end_layout

\begin_layout Standard
For all transition-based models, the training phase essentially consists
 of learning a model of what good transitions are given the parser state,
 which -- to reiterate -- both involves features of the tokens currently
 being processed and the previous transitions made.
\end_layout

\begin_layout Subsection
Graph-based models
\end_layout

\begin_layout Standard
Turning to another successful approach, the class of graph-based models,
 the learning task is concerned with what a good dependency graph is like,
 rather than which transitions are good.
\end_layout

\begin_layout Standard
Graph-based models define a scoring function over possible dependency graphs
 for a sentence, which is used at parse time in conjunction with a search
 algorithm to find for the highest-scoring graph.
 This score function should provide a measure 
\begin_inset Formula $\textrm{score}(G)$
\end_inset

 of the likelihood that a certain dependency graph 
\begin_inset Formula $G$
\end_inset

 is the correct analysis for the sentence 
\begin_inset Formula $S$
\end_inset

.
 
\end_layout

\begin_layout Subsubsection
Arc-factored models
\end_layout

\begin_layout Standard
In the training phase, graph based models learn the parameters of the scoring
 function.
 Different scoring functions and search algorithms have been proposed, all
 sharing the common property that the scoring function is decomposed into
 smaller functions that score local properties of the graph being evaluated,
 namely single attachments (for 
\emph on
first-order
\emph default
 or 
\emph on
arc-factored
\emph default
 models) or pairs of attachments (for 
\emph on
second-order
\emph default
 models).
 Typically, the score of a local property, be it a single arc or a pair,
 is calculated as a the dot product of a weight vector and the feature vector
 for the arc -- or in other words, a weighted sum of the arc features.
 
\begin_inset CommandInset label
LatexCommand label
name "sub:weights"

\end_inset


\end_layout

\begin_layout Standard
The score for the whole graph is typically found by summing the local property
 scores.
 The particular way in which subgraph scores is combined to achieve the
 score of the whole graph may differ between different graph-based models,
 but they share the fundamental assumption that the score of a graph 
\begin_inset Formula $G$
\end_inset

 factors through the scores of the subgraphs of 
\begin_inset Formula $G$
\end_inset

 
\begin_inset CommandInset citation
LatexCommand citep
key "kbler_dependency_2009"

\end_inset

.
 In the case of arc-factored models, where each arc is scored individually
 by the function 
\begin_inset Formula $\lambda(w_{i},r,w_{j})$
\end_inset

, we can write
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Additionally, some models 
\begin_inset CommandInset citation
LatexCommand citep
key "nakagawa_multilingual_2007"

\end_inset

 include global properties of the graph in the scoring function.
 
\end_layout

\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula \[
\textrm{score}(G)=\sum\lambda(w_{i},r,w_{j})\]

\end_inset


\end_layout

\begin_layout Standard
In formal terms, the parsing algorithm 
\begin_inset Formula $h$
\end_inset

 in a graph-based model produces a dependency graph for a sentence 
\begin_inset Formula $S$
\end_inset

 by finding the graph the maximizes the scoring function:
\begin_inset Formula \[
h(S,\Gamma,\lambda)=\arg\max_{G\in\mathcal{G_{S}}}\textrm{score}(G)\]

\end_inset


\end_layout

\begin_layout Standard
The graph-theoretic term 
\emph on
spanning tree
\emph default
 denotes a subgraph 
\begin_inset Formula $G'=(V',A')$
\end_inset

 of a graph 
\begin_inset Formula $G=(V,A)$
\end_inset

 which satisfies the following criteria:
\end_layout

\begin_layout Enumerate

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
\begin_inset Formula $G'$
\end_inset


\family default
\series default
\shape default
\size default
\emph default
\bar default
\noun default
\color inherit
 is a directed tree.
\end_layout

\begin_layout Enumerate

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
\begin_inset Formula $G'$
\end_inset

 spans all the nodes of 
\begin_inset Formula $G$
\end_inset

, that is 
\begin_inset Formula $V=V'$
\end_inset

.
\end_layout

\begin_layout Standard
With a scoring function for subgraphs in the graph, the 
\emph on
maximum spanning tree
\emph default
 (MST) for a graph 
\begin_inset Formula $G$
\end_inset

 is simply the highest scoring spanning tree for 
\begin_inset Formula $G$
\end_inset

.
 Graph theory provides several algorithms for finding maximum spanning trees,
 which can be used if the parsing problem is cast as a graph search problem:
 Given the sentence 
\begin_inset Formula $S$
\end_inset

 and dependency types 
\begin_inset Formula $R$
\end_inset

, let 
\begin_inset Formula $G_{S}=(A_{S},V_{S})$
\end_inset

 denote the graph where the nodes 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none

\begin_inset Formula $V_{S}$
\end_inset


\family default
\series default
\shape default
\size default
\emph default
\bar default
\noun default
\color inherit
 are the sentence tokens 
\begin_inset Formula $\{w_{0},w_{1},...,w_{n}\}$
\end_inset

 and there is an arc of all possible dependency types between all pairs
 of tokens, except for dependencies from the root token: 
\begin_inset Formula \[
A_{S}=\left\{ (w_{i},r,w_{j})\vert\textrm{ for all }w_{i},w_{j}\in S\textrm{ and }r\in R\textrm{ and }j\neq0\right\} \]

\end_inset

As 
\begin_inset Formula $G_{S}$
\end_inset

 has multiple arcs -- one for each dependency type 
\begin_inset Formula $r\in R$
\end_inset

 -- between each pair of nodes, and in both directions, it is a 
\emph on
multi digraph
\emph default
.
 However, in the case of arc-factored models, which score each arc individually,
 we can safely remove all but the highest scoring arc between any two nodes,
 thus reducing the multi digraph 
\begin_inset Formula $G_{S}$
\end_inset

 to a digraph 
\begin_inset Formula $G'_{S}=(V'_{S},A'_{S})$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{eqnarray*}
V'_{S} & = & V_{S}\\
A'_{S} & = & \left\{ (w_{i},w_{j})\vert w_{i},w_{j}\in V_{S},j\neq0\right\} \\
\lambda(w_{i},w_{j}) & = & \max_{r}\lambda(w_{i},r,w_{j})\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
This reduction is risk-free with arc-factored models, for the maximum arc
 scores we reduced to must include those of the maximum spanning tree.
 Otherwise, it would be possible to get a higher scoring tree by substituting
 arcs in it from 
\begin_inset Formula $A'_{S}$
\end_inset

.
 In order to recover the arc labels, it is necassary to keep track of the
 label 
\begin_inset Formula $r$
\end_inset

 that yielded the highest arc score 
\begin_inset Formula $\lambda(w_{i},r,w_{j})$
\end_inset

 for each pair of nodes.
\end_layout

\begin_layout Standard
The set of possible dependency trees for the sentence 
\begin_inset Formula $S$
\end_inset

 is identical to the set of spanning trees for 
\begin_inset Formula $G_{S}$
\end_inset

, and with the scoring function 
\begin_inset Formula $\textrm{score}(G)$
\end_inset

 we can get the best parse by finding the maximum spanning tree of 
\begin_inset Formula $G_{S}$
\end_inset

.
 A maximum spanning tree finding algorithm is Chu-Liu-Edmons, which proceeds
 in part with a greedy strategy by assigning the hightest scoring arcs to
 each node, and in part with a recursive procedure for untying possible
 loops produced in the greedy step.
 Given a sentence of length 
\begin_inset Formula $n$
\end_inset

, the Chu-Liu-Edmonds algorithm takes 
\begin_inset Formula $O(n^{3})$
\end_inset

 steps to find the maximum spanning tree, but with some trickery 
\begin_inset CommandInset citation
LatexCommand citep
key "tarjan_finding_1977"

\end_inset

 it can be made to run in 
\begin_inset Formula $O(n^{2})$
\end_inset

 steps.
 The algorithm works on the digraph 
\begin_inset Formula $G'_{S}$
\end_inset

 which must be constructed beforehand, yielding a total runtime of 
\begin_inset Formula $O(|R|n^{2}+n^{2})=O(|R|n^{2})$
\end_inset

.
\end_layout

\begin_layout Standard
As mentioned
\begin_inset CommandInset ref
LatexCommand vpageref
reference "sub:weights"

\end_inset

, arcs scores are a weighted sum of arc features 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none

\begin_inset Formula $f(w_{i},r,w_{j})$
\end_inset


\family default
\series default
\shape default
\size default
\emph default
\bar default
\noun default
\color inherit
:
\begin_inset Formula \[
\lambda(w_{i},r,w_{j})=\mathbf{w}\cdot f(w_{i},r,w_{j})\]

\end_inset


\end_layout

\begin_layout Standard
For a whole dependency graph 
\begin_inset Formula $G=(V,A)$
\end_inset

 the score amounts to the sum of the arc scores:
\end_layout

\begin_layout Standard
\begin_inset Formula \[
\textrm{score}(G)=\sum_{(w_{i},r,w_{j})\in A}\lambda(w_{i},r,w_{j})=\sum_{(w_{i},r,w_{j})\in A}\mathbf{w}\cdot f(w_{i},r,w_{j})\]

\end_inset


\end_layout

\begin_layout Standard
And the dependency tree for a sentence 
\begin_inset Formula $S$
\end_inset

 yielded by the graph-based model is the spanning tree 
\begin_inset Formula $G\in\mathcal{G_{S}}$
\end_inset

 
\begin_inset Formula $ $
\end_inset

 yielding the highest score:
\end_layout

\begin_layout Standard
\begin_inset Formula \[
h(S,\Gamma,\lambda)=\arg\max_{G\in\mathcal{G_{S}}}\textrm{score}(G)=\arg\max_{G\in\mathcal{G_{S}}}\sum_{(w_{i},r,w_{j})\in A}\mathbf{w}\cdot f(w_{i},r,w_{j})\]

\end_inset


\end_layout

\begin_layout Standard
At training time, the graph-based model must learn the weight vector 
\begin_inset Formula $\mathbf{w}$
\end_inset

 from training data.
 In the simplest case, a perceptron 
\begin_inset CommandInset citation
LatexCommand citep
key "rosenblatt_perceptron:probabilistic_1958"

\end_inset

 can be used to construct the weights.
 With the percepron, learning proceeds by iteratively looking at the sentences
 in the training data, and for each sentence:
\end_layout

\begin_layout Enumerate
Find the hightest-scoring tree 
\begin_inset Formula $h(S,\Gamma,\lambda)=\arg\max_{G\in\mathcal{G_{S}}}\sum_{(w_{i},r,w_{j})\in A}\mathbf{w}\cdot f(w_{i},r,w_{j})$
\end_inset

 using the current weight vector.
\end_layout

\begin_layout Enumerate
Compare this to the correct tree given in the training data.
\end_layout

\begin_layout Enumerate
Adjust the weight vector by increasing the weights for the features present
 in the correct tree, while decreasing weights for other features.
\end_layout

\begin_layout Standard
The perceptron is an inference-based algorithm and achieves perfect classificati
on when the data is linearly seperable 
\begin_inset CommandInset citation
LatexCommand citep
key "witten_data_2005"

\end_inset

.
 Many other learning techniques apply, often involving computations that
 outweigh the maximum spanning tree algorithm itself in terms of complexity.
\end_layout

\begin_layout Section
State of the Art
\end_layout

\begin_layout Standard
In this decade, data-driven dependency parsing has received a large amount
 of interest from researchers in human language technology.
 For two successive years at the Conference on Computational Language Learning
 
\begin_inset CommandInset citation
LatexCommand citep
key "buchholz_conll-x_2006,nivre_conll_2007"

\end_inset

, teams of researchers gathered in a friendly competition in multi-lingual
 data-driven dependency parsing.
 The parsing systems submitted includes several transtition- and graph-based
 models, including the graph-based MSTParser 
\begin_inset CommandInset citation
LatexCommand citep
key "mcdonald_multilingual_2006"

\end_inset

 and the transition-based MaltParser 
\begin_inset CommandInset citation
LatexCommand citep
key "nivre_efficient_2003"

\end_inset

, jointly ranking as the best performing systems.
\begin_inset Float table
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /Users/christian/Projects/dep_feat/doc/figures/conll/languages.pdf

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Treebanks at the CoNLL shared task 
\begin_inset CommandInset citation
LatexCommand citep
key "hall_conll-x_2006"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float table
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /Users/christian/Projects/dep_feat/doc/figures/conll/languages2.pdf
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Treebank details 
\begin_inset CommandInset citation
LatexCommand citep
key "hall_conll-x_2006"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Corpora with dependency analyses (dependency 
\emph on
treebanks
\emph default
) for thirteen languages were compiled for the conference, either from existing
 dependency treebanks, or by converting treebanks with constituency structure
 into to dependency format through a process of recursively defining a head
 for each constituent 
\begin_inset CommandInset citation
LatexCommand citep
key "buchholz_conll-x_2006"

\end_inset

.
 Treebanks used differ not only in language, but also type of text (news
 reports, academic texts, dialogue transcripts, etc.), annotational conventions
 and richness as well as in size.
 All were converted into the same flat file format format (referred to as
 
\emph on
CoNLL format
\emph default
), allowing comparison of different systems across the whole spectrum of
 corpora.
\end_layout

\begin_layout Subsection
CoNLL Format
\end_layout

\begin_layout Standard
The CoNLL format has one token per line, with a blank line separating sentences.
 Lines are divided into a number of fields 
\begin_inset CommandInset citation
LatexCommand citep
key "buchholz_conll_2006"

\end_inset

:
\end_layout

\begin_layout Description
ID 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
Token counter, starting at 1 for each new sentence.
\end_layout

\begin_layout Description
FORM 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
Word form or punctuation symbol.
\end_layout

\begin_layout Description
LEMMA 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
Lemma or stem (depending on particular data set) of word form, or an underscore
 if not available.
\end_layout

\begin_layout Description
CPOSTAG 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
Coarse-grained part-of-speech tag, where tagset depends on the language.
\end_layout

\begin_layout Description
POSTAG 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
Fine-grained part-of-speech tag, where the tagset depends on the language,
 or identical to the coarse-grained part-of-speech tag if not available.
\end_layout

\begin_layout Description
FEATS 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
Unordered set of syntactic and/or morphological features (depending on the
 particular language), separated by a vertical bar (|), or an underscore
 if not available.
\end_layout

\begin_layout Description
HEAD 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
Head of the current token, which is either a value of ID or zero ('0').
 Note that depending on the original treebank annotation, there may be multiple
 tokens with an ID of zero.
\end_layout

\begin_layout Description
DEPREL 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
Dependency relation to the HEAD.
 The set of dependency relations depends on the particular language.
 Note that depending on the original treebank annotation, the dependency
 relation may be meaningfull or simply 'ROOT'.
\end_layout

\begin_layout Description
PHEAD 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
Projective head of current token, which is either a value of ID or zero
 ('0'), or an underscore if not available.
 Note that depending on the original treebank annotation, there may be multiple
 tokens an with ID of zero.
 The dependency structure resulting from the PHEAD column is guaranteed
 to be projective (but is not available for all languages), whereas the
 structures resulting from the HEAD column will be non-projective for some
 sentences of some languages (but is always available).
\end_layout

\begin_layout Description
PDEPREL 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
Dependency relation to the PHEAD, or an underscore if not available.
 The set of dependency relations depends on the particular language.
 Note that depending on the original treebank annotation, the dependency
 relation may be meaningfull or simply 'ROOT'.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align left
\begin_inset Graphics
	filename figures/conll/example-format.pdf
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Annotated sentence as represented in the corpus file
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename figures/conll/example-structure.eps
	lyxscale 50
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Visualization of the implicit dependency structure 
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Example sentence from the Spanish corpus Cast3LB 
\begin_inset CommandInset citation
LatexCommand citep
key "civit_building_2004,civit_cat3lb_2006"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
DATA SPLITS?
\end_layout

\begin_layout Subsection
Evaluation Metrics
\end_layout

\begin_layout Standard
Systems were evaluated by the 
\emph on
labeled accuracy score
\emph default
 (LAS) of the predicted parse trees, i.e.
 the percentage of dependencies where both the dependendy and its type is
 consistent with those of the gold standard parse trees.
 Additionally, 
\emph on
unlabeled attachment score
\emph default
 (UAS), in which the dependency labels are disregarded, was reported for
 each system, as well as 
\emph on
label accuracy 
\emph default
(LA), where only the dependency label is considered
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Note that these are all measures of 
\emph on
precision
\emph default
 only.
 However, as the number of dependencies predicted for a sentence is fixed
 by the number of tokens, 
\emph on
recall
\emph default
 becomes redundant, at least scoring across all dependency types together.
 When evaluating dependency arcs with different labels (or other property),
 it makes sense to report recall as well.
\end_layout

\end_inset

.
\end_layout

\begin_layout Subsection
CoNLL Results
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align left
\begin_inset Tabular
<lyxtabular version="3" rows="44" columns="8">
<features>
<column alignment="left" valignment="top" width="0pt">
<column alignment="right" valignment="top" width="0pt">
<column alignment="right" valignment="top" width="0pt">
<column alignment="right" valignment="top" width="0pt">
<column alignment="right" valignment="top" width="0pt">
<column alignment="right" valignment="top" width="0pt">
<column alignment="right" valignment="top" width="0pt">
<column alignment="right" valignment="top" width="0pt">
<row>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size scriptsize
Arabic
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size scriptsize
Bulgarian
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size scriptsize
Chinese
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size scriptsize
Czech
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size scriptsize
Danish
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size scriptsize
Dutch
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size scriptsize
German
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Canisius
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
57.64
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
78.74
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
78.37
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
60.92
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
77.90
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
74.59
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
77.56
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Attardi
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
53.81
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
72.89
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
54.89
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
59.76
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
66.35
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
58.24
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
69.77
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Wu
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
63.81
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
79.73
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
74.81
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
59.36
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
78.38
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
68.45
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
76.52
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Carreras
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
60.94
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
83.30
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
83.68
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
68.82
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
79.74
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
67.25
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
82.41
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Yuret
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
52.42
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
73.49
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
72.72
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
51.86
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
71.56
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
62.75
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
63.82
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Bick
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
55.37
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
79.21
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
76.18
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
63.02
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
74.61
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
69.51
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
74.74
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Nivre
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
66.71
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
87.41
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
86.92
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
78.42
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
84.77
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
78.59
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
85.82
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Schiehlen
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
44.39
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
0.00
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
66.20
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
53.34
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
76.05
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
72.11
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
68.73
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Ma
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
50.74
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
67.64
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
75.29
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
58.52
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
77.70
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
59.36
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
68.11
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Dreyer
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
53.37
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
74.81
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
71.63
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
60.54
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
66.61
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
61.56
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
70.97
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
O'Neil
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
66.71
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
85.24
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
86.70
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
76.60
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
82.83
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
77.51
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
85.36
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Do
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
60.92
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
0.00
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
85.05
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
72.88
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
80.60
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
72.91
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
84.17
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Johansson
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
64.29
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
0.00
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
72.49
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
71.46
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
81.54
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
72.67
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
80.43
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
McDonald
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
66.91
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
87.57
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
85.90
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
80.18
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
84.79
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
79.19
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
87.34
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Riedel
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
66.65
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
0.00
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
89.96
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
67.44
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
83.63
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
78.59
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
86.24
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Sagae
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
62.71
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
0.00
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
84.73
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
75.24
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
81.56
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
76.61
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
84.92
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Shimizu
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
62.83
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
0.00
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
0.00
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
0.00
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
75.81
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
0.00
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
0.00
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Corston-Oliver
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
63.53
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
83.36
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
79.92
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
74.48
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
81.74
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
71.43
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
83.47
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Cheng
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
65.19
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
86.34
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
84.27
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
76.24
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
81.72
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
71.77
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
84.11
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\emph on
Average
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\emph on
59.94
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\emph on
79.98
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\emph on
78.32
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\emph on
67.17
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\emph on
78.31
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\emph on
70.73
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\emph on
78.58
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\emph on
Std.
 dev.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\emph on
6.53
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\emph on
6.30
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\emph on
8.82
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\emph on
8.93
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\emph on
5.45
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\emph on
6.66
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\emph on
7.51
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size scriptsize
Japanese
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size scriptsize
Portuguese
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size scriptsize
Slovene
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size scriptsize
Spanish
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size scriptsize
Swedish
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size scriptsize
Turkish
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\emph on
Average
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Canisius
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
87.41
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
77.42
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
59.19
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
68.32
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
79.15
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
51.07
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\emph on
70.80
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Attardi
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
65.38
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
75.36
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
57.19
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
67.44
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
68.77
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
37.80
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\emph on
61.23
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Wu
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
90.11
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
81.47
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
67.83
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
72.99
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
71.72
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
55.09
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\emph on
71.71
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Carreras
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
88.13
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
83.37
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
68.43
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
77.16
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
78.65
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
58.06
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\emph on
74.72
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Yuret
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
84.35
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
70.35
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
55.06
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
69.63
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
65.23
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
60.31
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\emph on
65.01
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Bick
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
84.75
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
78.18
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
64.31
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
71.37
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
74.09
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
53.87
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\emph on
70.00
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Nivre
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
91.65
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
87.60
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
70.30
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
81.29
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
84.58
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
65.68
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\emph on
80.19
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Schiehlen
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
83.35
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
71.01
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
50.72
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
46.96
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
71.10
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
49.81
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\emph on
62.81
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Ma
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
70.84
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
71.13
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
57.21
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
65.08
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
63.83
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
41.72
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\emph on
63.29
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Dreyer
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
82.87
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
75.28
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
58.73
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
67.62
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
67.58
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
46.05
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\emph on
65.23
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
O'Neil
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
90.57
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
84.69
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
71.08
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
79.82
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
81.78
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
57.52
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\emph on
78.43
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Do
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
89.07
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
83.99
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
69.52
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
79.72
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
82.31
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
60.51
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\emph on
76.80
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Johansson
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
85.63
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
84.57
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
66.43
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
78.16
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
78.13
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
63.39
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\emph on
74.93
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
McDonald
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
90.71
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
86.82
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
73.44
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
82.25
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
82.55
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
63.19
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\emph on
80.27
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Riedel
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
90.51
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
84.43
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
71.20
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
77.38
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
80.66
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
58.61
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\emph on
77.94
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Sagae
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
90.37
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
86.01
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
69.06
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
77.68
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
82.00
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
63.21
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\emph on
77.84
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Shimizu
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
0.00
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
0.00
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
64.57
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
73.17
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
79.49
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
54.23
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\emph on
34.18
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Corston-Oliver
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
89.95
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
84.59
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
72.42
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
80.36
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
79.69
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
61.74
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\emph on
76.94
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Cheng
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
89.91
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
85.07
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
71.42
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
80.46
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
81.08
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
61.22
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\emph on
77.70
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\emph on
Average
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\emph on
85.86
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\emph on
80.63
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\emph on
65.16
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\emph on
73.52
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\emph on
76.44
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\emph on
55.95
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\emph on
Std.
 dev.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\emph on
7.09
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\emph on
5.83
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\emph on
6.78
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\emph on
8.41
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\emph on
6.46
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\emph on
7.71
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Scores (LAS) achieved by each system at CoNLL-X 
\begin_inset CommandInset citation
LatexCommand citep
key "buchholz_conll_2006"

\end_inset

.
\begin_inset CommandInset label
LatexCommand label
name "tab:conll-las"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset

Scores achieved by the participating systems are shown in table 
\begin_inset CommandInset ref
LatexCommand vref
reference "tab:conll-las"

\end_inset

.
 It is worth noting that while there is some variation in scores in between
 the different systems, there is no clear winner.
 Indeed, the top two systems -- the graph-based MSTParser by 
\begin_inset CommandInset citation
LatexCommand citet
key "mcdonald_multilingual_2006"

\end_inset

 and the transition-based MaltParser by 
\begin_inset CommandInset citation
LatexCommand citet
key "nivre_efficient_2003"

\end_inset

 -- are more or less on par, as shown in table 
\begin_inset CommandInset ref
LatexCommand vref
reference "tab:conll-top"

\end_inset

.
\begin_inset Float table
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align left
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="8">
<features>
<column alignment="left" valignment="top" width="0pt">
<column alignment="right" valignment="top" width="0pt">
<column alignment="right" valignment="top" width="0pt">
<column alignment="right" valignment="top" width="0pt">
<column alignment="right" valignment="top" width="0pt">
<column alignment="right" valignment="top" width="0pt">
<column alignment="right" valignment="top" width="0pt">
<column alignment="right" valignment="top" width="0pt">
<row>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size scriptsize
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size scriptsize
Arabic
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size scriptsize
Bulgarian
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size scriptsize
Chinese
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size scriptsize
Czech
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size scriptsize
Danish
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size scriptsize
Dutch
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size scriptsize
German
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
McDonald
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
66.91
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
87.57
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
85.90
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
80.18
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
84.79
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
79.19
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
87.34
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Nivre
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
66.71
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
87.41
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
86.92
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
78.42
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
84.77
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
78.59
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
85.82
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size scriptsize
Japanese
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size scriptsize
Portuguese
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size scriptsize
Slovene
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size scriptsize
Spanish
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size scriptsize
Swedish
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size scriptsize
Turkish
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\emph on
Average
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
90.71
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
86.82
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
73.44
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
82.25
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
82.55
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
63.19
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\emph on
80.83
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
91.65
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
87.60
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
70.30
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
81.29
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
84.58
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
65.68
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\emph on
80.75
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Scores for the top two systems: The graph-based MSTParser 
\begin_inset CommandInset citation
LatexCommand citep
key "mcdonald_multilingual_2006"

\end_inset

 and the transition-based MaltParser 
\begin_inset CommandInset citation
LatexCommand citep
key "nivre_efficient_2003"

\end_inset

.
 
\begin_inset CommandInset label
LatexCommand label
name "tab:conll-top"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
These two top scoring systems represent both of the general approaches to
 data-driven parsing outlined in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Dependency-Parsing"

\end_inset

.
 While it is tempting to conclude that there does not seem to be much empirical
 difference between them, 
\begin_inset CommandInset citation
LatexCommand citet
key "mcdonald_characterizingerrors_2007"

\end_inset

 find several substantial differences in a detailed error analysis, with
 respect to the types of error made by each system:
\end_layout

\begin_layout Quotation
[...] MaltParser tends to perform better on shorter sentences, which require
 the greedy inference algorithm to make less parsing decisions.
 [...]
\end_layout

\begin_layout Quotation
MSTParser is far more precise for longer dependency arcs, whereas MaltParser
 does better for shorter dependency arcs.
 This behaviour can be explained using the same reasoning as above: shorter
 arcs are created before longer arcs in the greedy parsing procedure of
 MaltParser and are less prone to error propagation.
 Theoretically, MSTParser should not perform better or worse for edges of
 any length, which appears to be the case.
 [...]
\end_layout

\begin_layout Quotation
MSTParser’s precision degrades as the distance to the root increases whereas
 MaltParser’s precision increases.
 [...] Dependency arcs further away from the root are usually constructed early
 in the parsing algorithm of MaltParser.
 Again a reduced likelihood of error propagation coupled with a rich feature
 representation beneﬁts that parser substantially.
 Furthermore, MaltParser tends to overpredict root modiﬁers, because all
 words that the parser fails to attach as modiﬁers are automatically connected
 to the root [...]
\end_layout

\begin_layout Standard
The authors also find differences in accuracy in relation to linguistic
 categories of tokens (part of speech) and dependency types, but explain
 most in terms of the inherent strengths and weaknesses of the two models
 pointed out above.
\end_layout

\begin_layout Standard
They do find a marked difference in how well a specific annotational convention
 for coordinations is handled, namely 
\emph on
coordinating conjunction as head
\emph default
 (CCH), which MSTParser predicts nearly 20 percentage points more accurately
 (figure 
\begin_inset CommandInset ref
LatexCommand vref
reference "fig:Precision-coord"

\end_inset

).
 As briefly described in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Dependency-Parsing"

\end_inset

, this is the convention where the conjunction itself it head of the coordinatio
n, thus somewhat occluding the function of the coordinate structure in the
 larger syntactic structure.
 The CCH convention is contrasted to CCD, CJCJ and CJCC, in which one of
 the conjuncts act as head of the coordination.
\end_layout

\begin_layout Standard
Interestingly, the CCH convention seems to have a substantially lower precision
 
\emph on
regardless
\emph default
 of parsing model.
 If such a difference is not entirely attributable to 
\begin_inset Quotes eld
\end_inset

prior
\begin_inset Quotes erd
\end_inset

 difference in average treebank precision, it would support a central hypothesis
 of this project: that explicitness in treebank annotation can cause a significa
nt difference in accuracy of data-driven parsers.
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/conll/conjunction-precision.pdf
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Precision across different annotational conventions for coordination 
\begin_inset CommandInset citation
LatexCommand citep
key "mcdonald_characterizingerrors_2007"

\end_inset

.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Precision-coord"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Feature Engineering in Dependency Parsing
\end_layout

\begin_layout Section
Research Question
\end_layout

\begin_layout Standard
Data-driven dependency parsers presented at CoNLL generally perform well,
 but with an average precision in labeled attachment across languages for
 the top systems of about 81%, there is plenty of room for improvement.
 Each parsing model has its strengths and weaknesses, and the averaged score
 is of course also an average of the weaknesses.
 What if we focus on the strengths of each model? To get a rough
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
The oracle parser suffers from error propagation in the underlying parse
 trees, so it is not a fair upper bound for hybrid systems employing an
 ensemble of systems in its parsing decisions.
\end_layout

\end_inset

 upper bound on how much improvement can be achieved by the strengths all
 models in unison, 
\begin_inset CommandInset citation
LatexCommand citet
key "mcdonald_characterizingerrors_2007"

\end_inset

 simulated an 
\emph on
oracle parser
\emph default
 that chose the most accurate of all parses produced by the CoNLL systems.
 Labeled attachment score with the oracle parser rose to 86.9%.
 
\end_layout

\begin_layout Standard
In this project, instead of trying to improve parsing models themselves,
 I will turn attention to the input data for the data-driven systems: treebanks.
 Is it possilbe to augment treebanks with additional or modified features
 such that existing data-driven parsing systems generate better dependency
 parsers? In particular, can some linguistically motivated features reduce
 errors of tricky constructions such as parentheticals?
\end_layout

\begin_layout Section
Review of literature and research
\end_layout

\begin_layout Standard
Feature engineering has already received a fair amount of interest.
 Partly from parser creators, as they must choose which features of which
 tokens -- and in which combinations -- to let their parser consider, and
 partly from people researchers wanting to improve performance of existing
 systems.
 I will not attempt a systematic and exhaustive overview -- instead, I'll
 treat the field a bit like a zoo and merely point out some of the interesting
 animals.
\end_layout

\begin_layout Subsection
Phrase identifying features
\end_layout

\begin_layout Standard
In the original paper for the MSTParser, 
\begin_inset CommandInset citation
LatexCommand citet
key "mcdonald_multilingual_2006"

\end_inset

 note that the accuracy of verb and conjunction attachment for multiclause
 sentences in Spanish is well below the average:
\end_layout

\begin_layout Quotation
Although overall unlabeled accuracy is 86%, most verbs and some conjunctions
 attach to their head words with much lower accuracy: 69% for main verbs,
 75% for the verb 
\emph on
ser
\emph default
, and 65% for coordinating conjunctions.
 [...] These weaknesses are not surprising, since these decisions encode the
 more global aspects of sentence structure: arrangement of clauses and adverbial
 dependents in multi-clause sentences, and prepositional phrase attachment.
 
\end_layout

\begin_layout Standard
They describe prelimenary experiments with engineering a feature to improve
 the accuracy:
\end_layout

\begin_layout Quotation
[...] we added features to count the number of commas and conjunctions between
 a dependent verb and its candidate head.
 Unlabeled accuracy for all verbs increases from 71% to 73% and for all
 conjunctions from 71% to 74%.
 Unfortunately, accuracy for other word types decreases somewhat, resulting
 in no signiﬁcant net accuracy change.
 Nevertheless, this very preliminary experiment suggests that wider-range
 features may be useful in improv ing the recognition of overall sentence
 structure.
 
\end_layout

\begin_layout Standard
In a chunking-like preprocessing step, 
\begin_inset CommandInset citation
LatexCommand citet
key "zhou_block-based_2000"

\end_inset

 identifies 
\begin_inset Quotes eld
\end_inset

blocks
\begin_inset Quotes erd
\end_inset

 in unrestricted Chinese text and reports successful usage in dependency
 parsing, although no direct comparison to a baseline system without block
 identification is reported.
\end_layout

\begin_layout Standard
\begin_inset CommandInset citation
LatexCommand citet
key "attardi_chunking_2008"

\end_inset

, working with the English treebank, report of benefits from chunking text
 and determining the head of each chunk (not unlike shallow parsing):
\end_layout

\begin_layout Quotation
Knowledge about chunks can be helpful to a Shift/Reduce dependency parser,
 since it typically operates with a limited lookahead and hence has only
 a narrower vision of the phrase being analyzed than for instance a Maxi-
 mum Spanning Tree parser [...].
\end_layout

\begin_layout Standard
However, the chunking is done on the basis of gold standard (manual) annotation.
 When they use a statistical chunker instead, the effect is reduced, likely
 due to propagation of errors in the statistical chunking.
 Thinking that the parser might as well perform the chunking task, they
 then resort to only chunking 
\emph on
simple noun phrases
\emph default
, which can be done deterministically from patterns of POS tags:
\end_layout

\begin_layout Quotation
Chunking exploits POS tags produced by previous process- ing steps and hence
 using a chunker leads to a more com- plex layered parser architecture.
 But since the parser it- self may have access to the same information that
 the chun- ker uses to infer the chunks, one may wonder whether the parser
 might itself subsume the task of the chunker.
 We will show that indeed the addition of simple chunker-like features allows
 the parser to achieve an accuracy close to that from using gold chunk data.
 
\end_layout

\begin_layout Standard
Using the Thai part of a parallel Thai-Japanese corpus, 
\begin_inset CommandInset citation
LatexCommand citet
key "tongchim_experiments_2008"

\end_inset

 also examine the use of a 
\emph on
base noun phrase
\emph default
 chunker as a preprocessing step to dependency parsing.
 They report of relatively low chunking accuracy (due to ambiguities of
 noun phrases in Thai), but nonetheless find that the chunk information
 benefits the parser, yielding a gain in LAS of 3.34 percentage points.
\end_layout

\begin_layout Standard
\begin_inset CommandInset citation
LatexCommand citet
key "hamabe_detection_2006"

\end_inset


\noun on
 
\noun default
report of trouble parsing spontaneous Japanese speech:
\end_layout

\begin_layout Quotation
[...] automatically detected dependencies often cross clause boundaries erroneously
 because sentences including quotations or inserted clauses can have complicated
 clause structures.
 
\end_layout

\begin_layout Standard
They then employ a support vector machine (SVM) based chunker that considers
 information on morphemes, pauses and ﬁllers in the transcribed spontaneous
 speech to identify 
\noun on
quotation
\noun default
s and 
\noun on
inserted clause
\noun default
s, and find that the clause boundaries improve accurary of dependency structure
 analysis.
\end_layout

\begin_layout Standard
\begin_inset CommandInset citation
LatexCommand citet
key "ciaramita_dependency_2007"

\end_inset

 look at named, nominal and numerical entities, often occurring as segments
 of multiple words, and note:
\end_layout

\begin_layout Quotation
When we consider segments composed of several words there is exactly one
 dependency connecting a token outside the segment with a token inside the
 segment; e.g., “CBS Inc.” is connected outside only through the token “Inc.”,
 the subject of the main verb.
 With respect to the rest of the tree, segments tend to form units, with
 their own internal structure.
 Intuitively, this information seems relevant for parsing.
 This locally-structured patterns could help particularly simple algorithms
 like ours, which have limited knowledge of the global structure being built.
 
\end_layout

\begin_layout Standard
As may be guessed from this, they are working with a shift-reduce model.
 Introducing an 
\noun on
eos
\noun default
 feature on segment tokens, indicating the distance to the end of segments,
 they achieve an improvement in LAS of 0.88 on the Wall Street Journal part
 of the English CoNLL treebank.
 They also find that a semantic feature indicating the broad ontological
 category of a token (
\emph on
semantic super tagging
\emph default
) increase accuracy, and that both features in combination gain even more
 when adopting 
\emph on
second order feature maps
\emph default
, which explicitly represent pairs of all features, essentially allowing
 the model to learn correlations of feature co-occurrences.
\end_layout

\begin_layout Subsection
Semantic features
\end_layout

\begin_layout Standard
\begin_inset CommandInset citation
LatexCommand citet
key "vrelid_when_2007"

\end_inset

 note that parsing of Swedish poses special problems for the identiﬁcation
 of subjects and objects due to limited case marking and ambiguous word
 order patterns.
 Referring to the survey work of 
\begin_inset CommandInset citation
LatexCommand citet
key "de_swart_animacy_2008"

\end_inset

, Øvrelid 
\begin_inset CommandInset citation
LatexCommand citeyearpar
key "vrelid_linguistic_2008"

\end_inset

 remarks that the referential property 
\emph on
animacy
\emph default
 of nominal elements has been shown to play a role in argument disambiguation.
 Introducing a feature of 
\emph on
\noun on
animateness
\emph default
\noun default
 in the Swedish treebank, she achieves modest but significant (
\begin_inset Formula $p<0.01$
\end_inset

) improvement in overall accuracy, and notes:
\end_layout

\begin_layout Quotation
We ﬁnd that animacy inﬂuences the disambiguation of subjects from objects,
 objects from indirect objects as well as the general distinction of arguments
 from non-arguments.
\end_layout

\begin_layout Standard
Øvrelid 
\begin_inset CommandInset citation
LatexCommand citeyearpar
key "vrelid_finite_2008,vrelid_linguistic_2008"

\end_inset

 also finds that 
\noun on
definiteness
\noun default
 help disambiguate subjects and subject predicates, and that verbal features
 (
\noun on
finiteness
\noun default
 and 
\noun on
voice
\noun default
) improve accuracy of dependency relations involving verbal elements.
\end_layout

\begin_layout Standard
\begin_inset CommandInset citation
LatexCommand citet
key "bharati_two_2008"

\end_inset

 augment an Indian treebank with features to distinguish 
\noun on
human
\noun default
 from 
\noun on
nonhuman
\noun default
 and 
\noun on
animate
\noun default
 from 
\noun on
inanimate
\noun default
 nominals (yielding three classes, as the combination
\noun on
 inanimate
\noun default
 and 
\noun on
human
\noun default
 is impossible).
 They are motivated by the fact that certain Indian verbs only take human
 subjects, and find that the feature helps capture argument structure in
 dependency parsing.
\end_layout

\begin_layout Standard
Working with the Czech treebank, 
\begin_inset CommandInset citation
LatexCommand citet
key "novk_feature_2007"

\end_inset


\noun on
 
\noun default
introduce a variety of features , indicating amount other things if tokens
 are
\noun on
 capitalized
\noun default
 and 
\noun on
coordinable
\noun default
, as well as some technical sufﬁces given by the lemmatizer in use.
 With all features in combination, they achieve an improvement in LAS of
 0.45.
 Due to the relatively large number of feature introduced, the feature space
 dimension in the model grows a lot, impairing the runtime of the system.
 To counter this, they conduct some experiments in reducing dimensionaly,
 resulting in a compromise with a much smaller feature space and fair improvemen
t in accuracy.
\end_layout

\begin_layout Standard
TODO: Soft and hard constraints on dependency length 
\begin_inset CommandInset citation
LatexCommand citep
key "eisner_parsing_2005"

\end_inset

?
\end_layout

\begin_layout Section
Experiment Design
\end_layout

\begin_layout Standard
In the following I will describe how I augment treebanks with new features,
 and how I evaluate the effect of adding a feature.
 I shall refer to parsers trained on original, unmodified treebanks as 
\emph on
baseline
\emph default
, and use the term 
\emph on
system 
\emph default
for a parser trained on an augmented treebank.
\end_layout

\begin_layout Standard
TODO: choice of parser?
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement t
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename /Users/christian/Projects/dep_feat/doc/figures/flows/Experiment_Setup.eps
	scale 60
	BoundingBox 0bp 0bp 861bp 598bp

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Overview of experiment setup.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Experiment setup
\end_layout

\begin_layout Standard
As a broad outline, an experiment proceeds in the following steps:
\end_layout

\begin_layout Enumerate
Obtain 
\emph on
baseline
\emph default
 parses:
\end_layout

\begin_deeper
\begin_layout Enumerate
Train a parser on the training part of the original treebank.
\end_layout

\begin_layout Enumerate
Parse the test part of the original treebank using the trained parser.
\end_layout

\end_deeper
\begin_layout Enumerate
Introduce feature:
\end_layout

\begin_deeper
\begin_layout Enumerate
Augment a copy of the original training part by adding the desired feature.
\end_layout

\begin_layout Enumerate
Do the same for the original test part.
\end_layout

\end_deeper
\begin_layout Enumerate
Obtain 
\emph on
system
\emph default
 parses:
\end_layout

\begin_deeper
\begin_layout Enumerate
Train a parser on the training part of the augmented treebank.
\end_layout

\begin_layout Enumerate
Parse the test part of the augmented treebank using the newly trained parser.
\end_layout

\end_deeper
\begin_layout Enumerate
Evalutate effect and significance:
\end_layout

\begin_deeper
\begin_layout Enumerate
Obtain accuracy scores for both baseline and system parses.
\end_layout

\begin_layout Enumerate
Determine possible effect of the augmentation, and estimate statistical
 significance of the observed effect
\begin_inset Foot
status open

\begin_layout Plain Layout
As outlined here, the parser is trained on one treebank partition and predictive
 performance is estimated on the other partition.
 In other words, only a single round of cross-validation is performed.
 In general, and especially for small treebanks, it is considered good practice
 to perform several rounds of cross-validation using different partitions
 of the data set (
\begin_inset Formula $K$
\end_inset

-fold cross-validation, with 10 folds commonly used).
 However, as the treebanks I use come pre-partitioned, and are evalutated
 with these splits in other research, I chose to report performance with
 the existing train/test splits for reasons of comparability.
\end_layout

\end_inset

.
\end_layout

\end_deeper
\begin_layout Subsection
Treebank augmentation
\end_layout

\begin_layout Standard
In augmenting a treebank, new features may be added to sentence tokens,
 or existing properties (such as POS tags) modified.
 While some features can be added on a per-token basis, e.g.
 
\emph on
animacy
\emph default
 classification, addition of other features require an overview of the whole
 sentence, as would be the case for determining open-ended quotations.
 The procedure for augmenting a treebank allows for both token-level and
 sentence-level processing, and proceeds with these steps:
\end_layout

\begin_layout Enumerate
Initialization (e.g.
 of a classifier to be used).
\end_layout

\begin_layout Enumerate
Read treebank.
\end_layout

\begin_layout Enumerate
For each sentence:
\end_layout

\begin_deeper
\begin_layout Enumerate
Allow pre-processing of sentence.
\end_layout

\begin_layout Enumerate
For each token: Allow processing of token.
\end_layout

\begin_layout Enumerate
Allow post-processing of sentence.
\end_layout

\end_deeper
\begin_layout Enumerate
Output augmented treebank.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /Users/christian/Projects/dep_feat/doc/figures/flows/Augmentation.eps
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Augmentation process for a treebank.
\begin_inset CommandInset label
LatexCommand label
name "fig:Augmentation"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Parser evaluation
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename /Users/christian/Projects/dep_feat/doc/figures/flows/Comparison.eps
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Evaluation and comparison of parser accuracy.
 The system parse is first scored and compared to the baseline.
 Then effect and statistical significance is measured.
\begin_inset CommandInset label
LatexCommand label
name "fig:Evaluation-and-comparison"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset

Parsed sentences are obtained from both the baseline and the system parser
 (with the latter working on the augmented treebank), and predictive performance
 in terms of parsing accuracy of each is evaluated.
 
\end_layout

\begin_layout Standard
To this end, the standard CoNLL evaluation tool
\begin_inset Foot
status open

\begin_layout Plain Layout
Available from the CoNLL Shared Task website 
\begin_inset CommandInset citation
LatexCommand citet
key "buchholz_conll_2006"

\end_inset

.
\end_layout

\end_inset

 
\family typewriter
eval.pl
\family default
 is used for each parser in turn to compare its predicted parses to the
 gold standard (correct) parses given in the treebank.
 The obtained labeled accuracy score (LAS) for the system is compared to
 the baseline score, providing a measure of the overall effect on parsing
 accuracy of adding the feature in question.
\end_layout

\begin_layout Subsubsection
Focused evaluation
\end_layout

\begin_layout Standard
Some features only directly affects part of a treebank.
 A feature related to quotations for example is only added to tokens involved
 in quoted phrases.
 This begs the question: What effect does the added feature have on the
 affected tokens? And also interesting: What effect does it have on the
 remaining, unaffected tokens in the treebank?
\end_layout

\begin_layout Standard
With only a part of the tokens augmented, one option is to count dependency
 errors for the affected tokens separately.
 If for example one were to add a feature clearly marking tokens that occur
 between parentheses, this would give a ratio of correct dependencies for
 parenthesized tokens, as well as a ratio for the remainder.
 However, this approach fails to clearly capture a potentially interesting
 class of dependencies, namely those erroneoulsy 
\emph on
crossing
\emph default
 the boundary of e.g.
 a parenthesized clause (as the crossing dependency might originate from
 a token outside the clause).
 
\end_layout

\begin_layout Standard
It is not impossible conceive a heuristic for counting these problematic
 dependencies specifically, but it would be of little use when the objective
 is to compare a baseline parse to another by the same standard.
 The reason for this is simply that dependencies predicted for the baseline
 and the system may differ, so one would likely be counting different things
 in the baseline and the system, yielding incommensurable ratios.
\end_layout

\begin_layout Standard
Given the apparent difficulties of token- and dependency-level categorization,
 I have chosen to categorize on the 
\emph on
sentence-level
\emph default
 instead when estimating the effects of a feature on targeted versus untargeted
 parts of the text.
 I thus categorize 
\emph on
sentences
\emph default
 by whether the added feature applied to 
\emph on
any
\emph default
 token in the sentence, and evaluate each part separately, yielding two
 ratios, namely one for
\end_layout

\begin_layout Description
Affected
\begin_inset space ~
\end_inset

sentences in which augmented tokens occur, and one for
\end_layout

\begin_layout Description
Unaffected
\begin_inset space ~
\end_inset

sentences which were left untouched by the augmentation.
\end_layout

\begin_layout Standard
It is the hope that these ratios can cast light on the question of how valuable
 a feature was in parsing the linguictics phenomena it was intended to cover,
 and which effect the alteration in the parsing model had on the ability
 to parse the rest of the sentences.
 Did it enable the parser to clearly distinguish tokens that require different
 treatment and thus help unclutter the parsing model, or did it have an
 adverse effect by perhaps preventing a useful generalization in the parsing
 model?
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename /Users/christian/Projects/dep_feat/doc/figures/flows/Evaluation.eps
	lyxscale 50
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Three separate evaluations occur: One for the overall effect of adding the
 feature, one for the effect on affected sentences, and one for the effect
 on sentences unaffected by the augmentation.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename /Users/christian/Projects/dep_feat/doc/figures/flows/Categorization.eps
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Procedure for categorizing sentences for focused evaluation.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Procedures for focused evaluation of the effect of an augmentation.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Punctuation
\end_layout

\begin_layout Standard
Contrary to the convention of the CoNLL shared task 
\begin_inset CommandInset citation
LatexCommand citep
key "buchholz_conll-x_2006"

\end_inset

, I am including tokens considered punctuation when evaluating parser accuracy.
 As several of the phenomena in my experiments involve constructions marked
 by punctuation (e.g.
 quotation marks and parentheses), I expect the inclusion of the punctuation
 tokens themselves to contribute a valuable indication of a parsers ability
 to correctly predict dependency structure.
\end_layout

\begin_layout Standard
As long as I let the trained parsers work within the same treebanks, annotationa
l conventions for punctuation should be consistent and possible to predict.
 If one were to conduct experiments in domain adaptation using different
 treebanks with inconsistent conventions, it would make sense to exclude
 punctuation.
\end_layout

\begin_layout Subsection
Statistical significance
\end_layout

\begin_layout Standard
To quantify the likelihod of observed effects occurring merely by chance,
 Dan Bikel's 
\begin_inset Quotes eld
\end_inset

Randomized Parsing Evaluation Comparator
\begin_inset Quotes erd
\end_inset

 
\begin_inset CommandInset citation
LatexCommand citep
key "bikel_randomized_2004"

\end_inset

 is used to compute 
\begin_inset Formula $p$
\end_inset

-values.
 In the words of the author, the statistical significance test employed
 
\end_layout

\begin_layout Quotation
[...] is a type of “stratified shuffling” (which in turn is a type of “compute-inte
nsive randomized test”).
 In this testing method, the null hypothesis is that the two models that
 produced the observed results are the same, such that for each test instance
 (sentence that was parsed), the two observed scores are equally likely.
 This null hypothesis is tested by randomly shuffling individual sentences’
 scores between the two models and then re-computing the evaluation metrics
 (precision and recall, in this case).
 If the difference in a particular metric after a shuffling is equal to
 or greater than the original observed difference in that metric, then a
 counter for that metric is incremented.
 Ideally, one would perform all 
\begin_inset Formula $2^{n}$
\end_inset

 shuffles, where 
\begin_inset Formula $n$
\end_inset

 is the number of test cases (sentences), but given that this is often prohibiti
vely expensive, the default number of iterations is 10,000.
 After all iterations, the likelihood of incorrectly rejecting the null
 is simply 
\begin_inset Formula $\frac{nc+1}{nt+1}$
\end_inset

, where 
\begin_inset Formula $nc$
\end_inset

 is the number of random differences greater than the original observed
 difference, and 
\begin_inset Formula $nt$
\end_inset

 is the total number of iterations.
\end_layout

\begin_layout Standard
Bikel's tool estimates two 
\begin_inset Formula $p$
\end_inset

-values for the observed differences: One for precision and one for recall.
 The 
\begin_inset Formula $p$
\end_inset

-values reported in this project relate to the observed difference in 
\emph on
precision
\emph default
.
 
\end_layout

\begin_layout Standard
The author also remarks:
\end_layout

\begin_layout Quotation
This type of testing method assumes independence between test instances
 (sentences).
 This is not a bad assumption for parsing results, but is not correct, either.
\end_layout

\begin_layout Subsection
Treebanks
\end_layout

\begin_layout Standard
Several of the treebanks used at CoNLL are subject to restrictive licensing
 terms.
 The treebanks I was able to obtain for this project are listed below.
 Most
\begin_inset Foot
status open

\begin_layout Plain Layout
In particular, the Italian treebank was not used at CoNLL.
\end_layout

\end_inset

 are identical to those used at CoNLL, and some are converted phrase structure
 treebanks made specifically for CoNLL.
 I refer to 
\begin_inset CommandInset citation
LatexCommand citet
key "buchholz_conll-x_2006"

\end_inset

 for details.
\end_layout

\begin_layout Description
Arabic Prague Arabic Dependency Treebank (PADT) 
\begin_inset CommandInset citation
LatexCommand citep
key "haji_prague_2004,smr_prague_2002"

\end_inset


\end_layout

\begin_layout Description
Bulgarian Derivative of the Bulgarian HPSG Treebank 
\begin_inset CommandInset citation
LatexCommand citep
key "simov_design_2005,simov_practical_2003,simov_hpsg-based_2002"

\end_inset


\end_layout

\begin_layout Description
Czech The Prague Dependency Treebank (PDT) 
\begin_inset CommandInset citation
LatexCommand citep
key "bhmov_pdt:3-level_2001"

\end_inset


\end_layout

\begin_layout Description
Danish The Danish Dependency Treebank (DDT) 
\begin_inset CommandInset citation
LatexCommand citep
key "kromann_danish_2003"

\end_inset


\end_layout

\begin_layout Description
Dutch The Alpino Dependency Treebank 
\begin_inset CommandInset citation
LatexCommand citep
key "beek_alpino_2002,beek_alpino_2002-1"

\end_inset


\end_layout

\begin_layout Description
English ???
\end_layout

\begin_layout Description
German The TIGER Treebank 
\begin_inset CommandInset citation
LatexCommand citep
key "brants_tiger_2002"

\end_inset


\end_layout

\begin_layout Description
Italian Turin University Treebank (TUT) 
\begin_inset CommandInset citation
LatexCommand citep
key "bosco_linguistic_2008"

\end_inset


\end_layout

\begin_layout Description
Japanese Verbmobil 
\begin_inset CommandInset citation
LatexCommand citep
key "kawata_stylebook_2000"

\end_inset


\end_layout

\begin_layout Description
Portuguese 
\begin_inset CommandInset citation
LatexCommand citep
key "afonso_floresta_2002"

\end_inset


\end_layout

\begin_layout Description
Slovene 
\begin_inset CommandInset citation
LatexCommand citep
key "deroski_towardsslovene_2006"

\end_inset


\end_layout

\begin_layout Description
Spanish Cast3LB 
\begin_inset CommandInset citation
LatexCommand citep
key "civit_cat3lb_2006,civit_building_2004,civit_issues_2003"

\end_inset


\end_layout

\begin_layout Description
Swedish Talbanken05 
\begin_inset CommandInset citation
LatexCommand citep
key "nilsson_mamba_2005,einarsson_talbankens_1976,teleman_manual_1974"

\end_inset


\end_layout

\begin_layout Description
Turkish Metu Sabanci 
\begin_inset CommandInset citation
LatexCommand citep
key "oflazer_buildingturkish_2003,atalay_annotation_2003"

\end_inset


\end_layout

\begin_layout Standard
Qualities, statistics, appeal.
\end_layout

\begin_layout Section
Feature Designs
\end_layout

\begin_layout Standard
What I did.
\end_layout

\begin_layout Standard
[Present and discuss motivation, feature design and results for each focus
 area in turn]
\end_layout

\begin_layout Subsection
Parentheticals
\end_layout

\begin_layout Standard
Motivation: Word order in direct quoted speech 
\begin_inset CommandInset citation
LatexCommand citep
key "haberland_reported_1986"

\end_inset

.
 
\end_layout

\begin_layout Subsubsection

\noun on
Quotation
\end_layout

\begin_layout Standard
Feature designs: POS tags on quotation marks.
 Features on quoted tokens.
\end_layout

\begin_layout Standard
Results: Quotes in Danish, 
\end_layout

\begin_layout Standard
Discussion.
\end_layout

\begin_layout Subsubsection

\noun on
Parenthesis
\end_layout

\begin_layout Standard
Results: Italian.
\end_layout

\begin_layout Standard
NOTE: Det her viser meget godt de metodiske vanskeligheder i ikke at lave
 10-fold CV på så lille en træbank: lemma only giver -.4% (forværring) på
 first fold (law).
 Du skal ikke bekymre dig om det, men kan måske skrive en fodnote om, at
 der er tale om en meget lille træbank, og du vælger at evaluere på EVALITA'07-s
etup'et for sammenlignelighed, selvom det er metodisk mistænkeligt.
 Skriv noget i retning af Chanev (2006) (bortset fra at hans engelsk er
 forfærdeligt): "Although the treebank is small and n-fold cross-validation
 is usually used in such cases, here we report results on a test set of
 150 sentences (4,172 tokens) and a training set of 1,350 sentences (37,444
 tokens) in order the TUT experiments not to differ from the experiments
 on the other treebanks in this study."
\end_layout

\begin_layout Subsubsection

\noun on
Colon
\end_layout

\begin_layout Standard
Results: Talbanken.
 Italian.
\end_layout

\begin_layout Subsection
Apposition
\end_layout

\begin_layout Standard
Results: Catalonian.
\end_layout

\begin_layout Subsection
List items
\end_layout

\begin_layout Standard
Results.
 Discussion.
\end_layout

\begin_layout Subsection
Coordinated enumerations
\end_layout

\begin_layout Standard
Results.
 Discussion.
\end_layout

\begin_layout Subsection
Lemmatization
\end_layout

\begin_layout Standard
\begin_inset CommandInset citation
LatexCommand citep
key "bart_cst_2008"

\end_inset


\end_layout

\begin_layout Standard
Results: Danish.
 
\end_layout

\begin_layout Standard
Discussion: Allows parser to generalize.
\end_layout

\begin_layout Subsection
Animacy
\end_layout

\begin_layout Standard
Results: Danish.
\end_layout

\begin_layout Standard
Discussion: Coverage and quality of animacy data.
 Head status of functional categories in DDT versus Talbanken.
 
\begin_inset CommandInset citation
LatexCommand citep
key "vrelid_cross-lingual_2009"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename /Users/christian/Projects/dep_feat/doc/figures/foci/animacy/ddt-heads.pdf

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
DDT 
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename /Users/christian/Projects/dep_feat/doc/figures/foci/animacy/talbanken05-heads.pdf

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Talbanken05
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Different treatment of functional categories in DDT and in Talbanken05.
 In DDT, determiners -- such as 
\begin_inset Quotes eld
\end_inset

et
\begin_inset Quotes erd
\end_inset

 on the left hand side -- act as heads with nominal dependents, whereas
 Talbanken05
\emph on
 
\emph default
treats 
\emph on
nouns
\emph default
 as heads with functional dependents, as illustrated on the right hand side.
 The dependency structure examples are from Lilja Øvrelid's report on porting
 the animacy feature to Danish 
\begin_inset CommandInset citation
LatexCommand citep
key "vrelid_cross-lingual_2009"

\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Feature combinations
\end_layout

\begin_layout Standard
Effects of combining features.
\end_layout

\begin_layout Section
Results
\end_layout

\begin_layout Standard
Summarize results.
\end_layout

\begin_layout Standard
Can only do so much with this approach: Can't explicitly introduce features
 for pairs of tokens.
\end_layout

\begin_layout Chapter
Conclusion
\end_layout

\begin_layout Section
Future research
\end_layout

\begin_layout Standard
Optimized parser configurations to bring baseline scores on par with CoNLL
 results.
 Scoring as in CoNLL.
 For comparison.
 
\end_layout

\begin_layout Standard
Expand on pronominalization, givenness and word order 
\begin_inset CommandInset citation
LatexCommand citep
key "weber_word_2004"

\end_inset

.
\end_layout

\begin_layout Standard
Convert CCH annotation of conjunctions to (one of the other conventions).
\end_layout

\begin_layout Chapter*
Acknowledgements
\end_layout

\begin_layout Itemize
Lilja Øvrelid (animacy tagger)
\end_layout

\begin_layout Itemize
Bart Jongejan (danish lemmatizer)
\end_layout

\begin_layout Itemize
Anders Søgaard (idea, guidance)
\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "export"
options "bibtotoc,plainnat"

\end_inset


\end_layout

\begin_layout Chapter
\start_of_appendix
Source code
\end_layout

\begin_layout Standard
Include?
\end_layout

\begin_layout Chapter
Example runtime output
\end_layout

\begin_layout Standard
Include?
\end_layout

\end_body
\end_document
